version: '3.8'

services:
  mongo1:
    image: mongo:6.0
    container_name: mongo1
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_REPLICA_SET_NAME: rs0
    volumes:
      - mongo1data:/data/db
    networks:
      - mongonet

  mongo2:
    image: mongo:6.0
    container_name: mongo2
    restart: always
    ports:
      - 27018:27017
    volumes:
      - mongo2data:/data/db
    networks:
      - mongonet

  mongo3:
    image: mongo:6.0
    container_name: mongo3
    restart: always
    ports:
      - 27019:27017
    volumes:
      - mongo3data:/data/db
    networks:
      - mongonet

  mongosetup:
    image: mongo:6.0
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    entrypoint: [
      "sh", "-c",
      "sleep 5 && \
       mongosh --host mongo1 --eval 'rs.initiate({_id: \"rs0\", members: [{ _id: 0, host: \"mongo1:27017\" }, { _id: 1, host: \"mongo2:27017\" }, { _id: 2, host: \"mongo3:27017\" }]})'"
    ]
    networks:
      - mongonet

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: golang-cli-app
    depends_on:
      - mongo1
    networks:
      - mongonet
    stdin_open: true
    tty: true

volumes:
  mongo1data:
  mongo2data:
  mongo3data:

networks:
  mongonet:
